import * as React from 'react';
import styles from './DynamicControls.module.scss';
import { IDynamicControlsProps } from './IDynamicControlsProps';
import { escape } from '@microsoft/sp-lodash-subset';

import { Button, ButtonType, DatePicker, TextField, Dropdown } from 'office-ui-fabric-react';

export interface IDynamicControlsState {
  controlArray: ControlProps[];
}

export interface ControlProps {
  id: string;
}

var _CntrlVal = [];

export default class DynamicControls extends React.Component<IDynamicControlsProps, IDynamicControlsState> {
  constructor(props: IDynamicControlsProps, STATE: IDynamicControlsState) {
    super(props);

    this.state = {
      controlArray: []
    };
  }

  public dropDownHandleChange = (value, index) => {
    var cntrlIndex = index.toString();
    var dropSelectedItem = value;

    if (_CntrlVal.filter(x => x.index == cntrlIndex && x.key == "DropDown").length == 0) {
      _CntrlVal.push({ index: cntrlIndex, key: "DropDown", text: dropSelectedItem });
    }
    else {
      _CntrlVal.filter(x => x.index == cntrlIndex && x.key == "DropDown")[0]["text"] = dropSelectedItem;
    }
  }

  public textFieldHandleChange = (event) => {
    var cntrlId = event.target.id;
    var cntrlIndex = cntrlId.substr(cntrlId.lastIndexOf("_") + 1);
    var cntrlVal = event.target.value;

    if (_CntrlVal.filter(x => x.index == cntrlIndex && x.key == "TextField").length == 0) {
      _CntrlVal.push({ index: cntrlIndex, key: "TextField", text: cntrlVal });
    }
    else {
      _CntrlVal.filter(x => x.index == cntrlIndex && x.key == "TextField")[0]["text"] = cntrlVal;
    }
  }

  public dateHandleChange = (value, index) => {
    var cntrlIndex = index.toString();
    var dateSelectedItem = value.toString();

    if (_CntrlVal.filter(x => x.index == cntrlIndex && x.key == "DatePicker").length == 0) {
      _CntrlVal.push({ index: cntrlIndex, key: "DatePicker", text: dateSelectedItem });
    }
    else {
      _CntrlVal.filter(x => x.index == cntrlIndex && x.key == "DatePicker")[0]["text"] = dateSelectedItem;
    }
  }

  public onAddFilterClick = (event) => {
    this.setState((prevState) => ({
      controlArray: [...prevState.controlArray, { id: "", _CntrlVal: [] }]
    }));
  }

  public onSubmitClick = (event) => {
    // console.log(this.state);
    alert("Open Console !!");
    console.log(_CntrlVal);
  }

  public render(): React.ReactElement<IDynamicControlsProps> {
    var dropDownOption = [{ key: "0", text: 'Select Item' }, { key: "1", text: 'Item 1' }, { key: "2", text: 'Item 2' }, { key: "3", text: 'Item 3' }];

    return (
      <div id="parentDiv">
        <Button buttonType={ButtonType.primary} onClick={this.onAddFilterClick}>Add Control</Button>

        {this.state.controlArray.map((itemVal, index) => {
          return (
            <div key={index}>
              <TextField label="Text Field" id={"TextField_" + index} placeholder="Text Field Placeholder." onBlur={this.textFieldHandleChange} />
              <Dropdown label="Drop Down" id={"Dropdown_" + index} options={dropDownOption} defaultSelectedKey="0" onChanged={(e) => this.dropDownHandleChange(e.text, index)} />
              <DatePicker label="Date Picker" onSelectDate={(e) => this.dateHandleChange(e, index)} />
              <br></br>
            </div>
          );
        })}

        <Button buttonType={ButtonType.normal} onClick={this.onSubmitClick}>Show Details</Button>
      </div>
    );
  }
}
